{"version":3,"file":"static/js/933.9d0d80e6.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","redux/contacts/contacts.selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/ContactsPage.jsx","pages/FormPages/FormPage.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n\n  button {\n    display: block;\n    margin-top: 15px;\n    cursor: pointer;\n    background-color: violet;\n    border-radius: 3px;\n   \n    &:hover {\n      background-color: crimson;\n    }\n  }\n`;","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 20px;\n  justify-content: flex-start;\n  background-color: coral;\n  padding: 15px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  \n\n  \n  span {\n    width: 150px;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 17px;  \n  }\n  .wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 14px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  background-color: violet;\n  color: #fff;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n\n  &:hover {\n    background-color: crimson;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts.reducer';\nimport { ContactItem, ButtonDelete } from './ContactListItem.styled';\nimport Notiflix from 'notiflix';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n     Notiflix.Notify.failure(`Your contact was deleted`);\n  };\n\n  return (\n     <ContactItem>\n      <span>{contact.name}: </span>{' '}\n      <div className=\"wrapper\">\n        <span>{contact.number}</span>\n\n        <ButtonDelete\n          type=\"button\"\n          onClick={() => handleDeleteContact(contact.id)}\n        >\n          Delete\n        </ButtonDelete>\n      </div>\n    </ContactItem>\n  );\n};","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin: 10px 0px;\n  padding: 15px;\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { StyledContactList } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/contacts.selectors';\n\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectVisibleContacts);\n\n  \n  return (\n    <StyledContactList>\n      {filterContacts.map(contact => {\n        return <ContactListItem key={contact.id} contact={contact} />;\n      })}\n    </StyledContactList>\n  );\n};","import styled from 'styled-components';\n\nexport const FilterStyle = styled.input`\n  margin-left: 30px;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;","import { useDispatch } from 'react-redux';\nimport { FilterStyle } from './Filter.styled';\nimport { addContactsFilter } from '../../redux/contacts/contacts.reducer';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputFilterChange = evt => {\n    const filterValue = evt.target.value;\n    dispatch(addContactsFilter(filterValue));\n  };\n  return (\n    <div>\n      <h2>Find contacts by name</h2>\n      <FilterStyle type=\"text\" onChange={handleInputFilterChange} />\n    </div>\n  );\n};\n","\nimport { Title } from '../../pages/FormPages/FormPage.styled';\nimport { FormGroup } from '../../pages/FormPages/FormPage.styled';\nimport { Label } from '../../pages/FormPages/FormPage.styled';\nimport { Input } from '../../pages/FormPages/FormPage.styled';\nimport { Button } from '../../pages/FormPages/FormPage.styled';\nimport { FormContainer } from '../../pages/FormPages/FormPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts.reducer';\nimport { FormStyle } from './Form.styled';\nimport { selectContacts } from '../../redux/contacts/contacts.selectors';\nimport Notiflix from 'notiflix';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const createContact = evt => {\n    evt.preventDefault();\n\n    const name = evt.currentTarget.elements.contactName.value;\n    const number = evt.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === formData.name)) {\n      Notiflix.Notify.failure(`${formData.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(formData))\n      .unwrap()\n      .then(() => evt.target.reset());\n    Notiflix.Notify.success(`You add new contact`);\n  };\n\n  return (\n    <FormContainer>\n      <FormStyle onSubmit={createContact}>\n        <Title className=\"title\">Add new contact</Title>\n        <FormGroup>\n          <Label className=\"text\">Name</Label>\n          <Input className=\"input\" type=\"text\" name=\"contactName\" required />\n        </FormGroup>\n        <FormGroup>\n          <Label className=\"text\">Phone</Label>\n          <Input\n            className=\"input\"\n            type=\"text\"\n            name=\"contactNumber\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            placeholder=\"XXX-XX-XX\"\n            required\n          />\n        </FormGroup>\n        <Button type=\"submit\">Add contact</Button>\n      </FormStyle>\n    </FormContainer>\n  );\n};","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from './FormPages/FormPage.styled';\nimport { Wrp } from './FormPages/FormPage.styled';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/contacts.reducer';\nimport {\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/contacts.selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Wrp>\n      <Form />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      <ContactList />\n    </Wrp>\n  );\n};\n\nexport default ContactsPage;","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  background-color: coral;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 300px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  color: yellow;\n  text-align: center;\n  font-size: 50px;\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: white;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nexport const Button = styled.button`\n  background-color: #fff;\n  color: #fff;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nexport const Wrp = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;"],"names":["FormStyle","styled","_templateObject","_taggedTemplateLiteral","ContactItem","ButtonDelete","_templateObject2","ContactListItem","_ref","contact","dispatch","useDispatch","_jsxs","children","name","className","_jsx","number","type","onClick","contactId","id","deleteContact","Notiflix","StyledContactList","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","toLowerCase","includes","ContactList","filterContacts","useSelector","map","FilterStyle","Filter","onChange","evt","filterValue","target","value","addContactsFilter","Form","FormContainer","onSubmit","preventDefault","formData","currentTarget","elements","contactName","contactNumber","some","concat","addContact","unwrap","then","reset","Title","FormGroup","Label","Input","required","pattern","placeholder","Button","useEffect","fetchContacts","Wrp","Loader","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7"],"sourceRoot":""}